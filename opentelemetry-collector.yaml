extensions:
  health_check:
  pprof:
    endpoint: 0.0.0.0:1777
  zpages:
    endpoint: 0.0.0.0:55679

receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318

  opencensus:
    endpoint: 0.0.0.0:55678

  # Collect own metrics
  prometheus:
    config:
      scrape_configs:
        - job_name: 'otel-collector'
          scrape_interval: 10s
          static_configs:
            - targets: ['0.0.0.0:8888']

  jaeger:
    protocols:
      grpc:
        endpoint: 0.0.0.0:14250
      thrift_binary:
        endpoint: 0.0.0.0:6832
      thrift_compact:
        endpoint: 0.0.0.0:6831
      thrift_http:
        endpoint: 0.0.0.0:14268

  zipkin:
    endpoint: 0.0.0.0:9411

processors:
  batch:

exporters:
# this is where we would define a Datadog exporter
# if we wished to send data to both places
  otlp:
    endpoint: "api.honeycomb.io:443"
    headers:
      "x-honeycomb-team": ${YOUR_HC_API_KEY}
  otlp/metrics:
    endpoint: "api.honeycomb.io:443" # US instance
    #endpoint: "api.eu1.honeycomb.io:443" # EU instance
    headers:
      "x-honeycomb-team": ${YOUR_HC_API_KEY}
  logging:
    verbosity: detailed
  

service:
  telemetry:
    logs:
      level: "info"

  pipelines:

    traces:
      receivers: [otlp]
      processors: [batch]
      exporters: [otlp]

    # metrics:
    #   receivers: [otlp]
    #   processors: [batch]
    #   exporters: [logging]

    # logs:
    #   receivers: [otlp]
    #   processors: [batch]
    #   exporters: [logging]

  extensions: [health_check, pprof, zpages]
